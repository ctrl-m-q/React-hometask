{"version":3,"sources":["components/Todoitem.jsx","components/TodoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["Todoitem","props","item","onCheck","onRemove","className","classname","checked","onChange","id","name","title","description","time","style","background","onClick","icon","DeleteFilled","Item","Form","TodoForm","onSubmit","fieldsValidationMessage","layout","onFinish","values","console","log","label","minLength","validationMessage","pattern","htmlType","ToDo","useState","format","Date","now","todos","setTodos","index","findIndex","todo","splice","removeAllChecked","newArray","filter","ids","setids","map","renderItems","countUnchecked","i","length","tasksundone","Header","Layout","Content","Footer","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4cb7bad.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport {Button, Checkbox } from 'antd';\r\nimport {DeleteFilled} from '@ant-design/icons';\r\nimport { format } from 'date-fns';\r\n\r\n\r\nexport const Todoitem = (props) => {\r\n    const { item, onCheck, onRemove } = props;\r\n\r\n    const check = () =>{\r\n        onCheck(item.id);\r\n    }\r\n\r\n    const Remove = () =>{\r\n        onRemove(item.id);\r\n    }\r\n    \r\n    return(\r\n        \r\n        <li className = \"Todo-item\" key = {item.id}>\r\n            <Checkbox classname = \"checkbox\" checked = {item.checked} onChange= {check} > {item.name}, {item.title}, {item.description}, {item.time}\r\n            </Checkbox>\r\n            <Button style = {{background:\"#f5222d\"}} onClick={Remove} icon = {<DeleteFilled />} ></Button> \r\n        </li>\r\n        \r\n            \r\n    )\r\n    \r\n}\r\n","import React from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\n\r\nconst  {Item}  = Form;\r\n\r\nexport const TodoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    \r\n    const finish = (values) => {\r\n        console.log('these are the values')\r\n        console.log(values)\r\n        onSubmit(values.name, values.title, values.description)\r\n    }\r\n\r\n    const fieldsValidationMessage = \"the name should not be lesss than 3 characters!\";\r\n    const titlecapValidationmessage = \"the title must begin with a capital letter!\";\r\n    \r\n\r\n\r\n    return(\r\n        <Form className={'todo-form'} layout={'inline'} onFinish={finish}>\r\n            <Item name = {'name'} label=\"Name\">\r\n                <Input\r\n                minLength = {3}\r\n                validationMessage = {fieldsValidationMessage} \r\n                />\r\n            </Item>\r\n            <Item name = {'title'} label = \"Title\">\r\n                <Input \r\n                minLength = {3}\r\n                pattern = {\"^[A-Z][A-Za-z]+\"}\r\n                validationMessage = {titlecapValidationmessage}\r\n                />\r\n            </Item>\r\n                <Item name = {'description'} label = \"Description\">\r\n                    <Input \r\n                    minLength = {3}\r\n                    validationMessage = {fieldsValidationMessage}\r\n                    />\r\n                </Item>\r\n\r\n            <Item>\r\n                <Button htmlType = {'submit'}>Add</Button>\r\n            </Item>\r\n\r\n\r\n            \r\n        </Form>\r\n    )\r\n\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\n\r\n","import React, { useState} from 'react';\r\nimport {Card, Divider, Button} from 'antd';\r\nimport { Todoitem } from './Todoitem';\r\nimport { TodoForm } from './TodoForm';\r\nimport { format } from 'date-fns';\r\n\r\n\r\n\r\nexport const ToDo = () => {\r\n    \r\n    const [todos, setTodos] = useState([\r\n        {id: 1, name: 'todo 1', title:'Priority',description:'For Kids',checked:false,time:((format(Date.now(),'dd.MM.yyyy -hh:mm')))},\r\n        {id: 2, name: 'todo 2', title:'Flagged',description:'For Work', checked: false,time:((format(Date.now(),'dd.MM.yyyy -hh:mm')))}\r\n    ]);\r\n    \r\n    const onCheck = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n        const todo = todos[index];\r\n        \r\n        todo.checked = !todo.checked;\r\n        setTodos([...todos]);\r\n    }\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n    }\r\n    const removeAllChecked = () => {\r\n        var newArray = todos.filter(function (todo){\r\n            \r\n            return todo.checked === false;\r\n\r\n        })\r\n        console.log(newArray)\r\n        setTodos([...newArray])\r\n    }\r\n\r\n   const tasksundone = () =>{\r\n       var countUnchecked = 0;\r\n        for (let i = 0; i<todos.length; i++){\r\n            if (todos[i].checked === false){\r\n               // setCount(count + 1);\r\n               countUnchecked++;\r\n               \r\n            }\r\n        }\r\n        console.log(countUnchecked)\r\n        return countUnchecked;\r\n    }\r\n     \r\n    const [ids, setids] = useState(10);\r\n\r\n    const renderItems = (todos) => {\r\n        return (\r\n\r\n            <ul className ={'Todo-list'}>\r\n                {todos.map(todo => {\r\n                    console.log(todo)\r\n                    return(\r\n                        <Todoitem item ={todo} onCheck = {onCheck} onRemove = {onRemove} />\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const onSubmit = (name,title,description)=>{\r\n        console.log(name,title,description)\r\n        const todo = {\r\n            id: ids,\r\n            name,\r\n            title,\r\n            time:((format(Date.now(),'dd.MM.yyyy -hh:mm'))),\r\n            description, \r\n            checked: false\r\n        };\r\n\r\n        setTodos([...todos, todo]);\r\n        setids (ids +1);\r\n    }\r\n    \r\n    const utilsButtons = () => {\r\n        return(\r\n            <Button onClick = {removeAllChecked}>\r\n            Remove checked items\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Card title = {'My To-Do List'}>\r\n            <TodoForm onSubmit={onSubmit}/>\r\n            <Divider/>\r\n            { \r\n               renderItems(todos)\r\n            }\r\n            <Divider/>\r\n            {utilsButtons()}\r\n            <Divider/>\r\n            amount of Undone tasks: {tasksundone()}\r\n        </Card>\r\n    );\r\n    \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {Layout, Row, Col} from 'antd';\r\nimport { ToDo } from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\n\r\nconst {Header, Footer, Content} = Layout;\r\n\r\nconst App = () => {\r\nreturn (\r\n    <Layout>\r\n        <Header></Header>\r\n        <Content>\r\n            <Row>\r\n                <Col span={12} offset={6}>\r\n               < ToDo/ >\r\n                </Col>\r\n            </Row>\r\n        </Content> \r\n        <footer></footer>  \r\n    </Layout>  \r\n)\r\n\r\n\r\n}\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}